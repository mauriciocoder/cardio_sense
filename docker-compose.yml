version: '3.8'

volumes:
  data_path:

services:
  api:
    build: .
    ports:
      - "${FLASK_PORT}:${FLASK_PORT}"
    environment:
      - FLASK_APP=src/api
      - FLASK_ENV=${FLASK_ENV}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    command: python -m flask run --host=${FLASK_HOST}
    depends_on:
      - redis

  worker:
    build: .
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - GROQ_API_KEY=${GROQ_API_KEY}
      - GROQ_TEMPERATURE=${GROQ_TEMPERATURE}
      - GROQ_MODEL_NAME=${GROQ_MODEL_NAME}
      - CARDIO_SENSE_DATA_PATH=${CARDIO_SENSE_DATA_PATH}
    volumes:
      - data_path:${CARDIO_SENSE_DATA_PATH}  # Local directory bind mount
    command: celery -A src.worker.tasks worker --loglevel=DEBUG -E
    depends_on:
      - redis

  flower:
    image: mher/flower:0.9.5
    command: flower -A src.worker --port=${CELERY_FLOWER_PORT} --persistent=${CELERY_FLOWER_PERSISTENT}
    ports:
      - "${CELERY_FLOWER_PORT}:${CELERY_FLOWER_PORT}"
    volumes:
      - .:/src
    working_dir: /src
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
    depends_on:
      - worker

  redis:
    image: redis:6-alpine
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"

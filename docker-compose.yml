version: '3.8'

services:
  api:
    build: .
    ports:
      - "${FLASK_PORT}:${FLASK_PORT}"
    environment:
      - FLASK_APP=src/api
      - FLASK_ENV=${FLASK_ENV}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    command: python -m flask run --host=${FLASK_HOST}
    depends_on:
      - rabbitmq

  worker:
    build: .
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    command: celery -A src.worker.tasks worker --loglevel=info
    depends_on:
      - rabbitmq

  flower:
    image: mher/flower:0.9.5
    command: flower -A src.worker --port=${CELERY_FLOWER_PORT} --persistent=${CELERY_FLOWER_PERSISTENT}
    ports:
      - "${CELERY_FLOWER_PORT}:${CELERY_FLOWER_PORT}"
    volumes:
      - .:/src  # Make sure the src directory is copied # TODO: Evaluate if this is necessary. We are creating a volume locally!
    working_dir: /src  # Set the working directory explicitly
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
    depends_on:
      - worker

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "${RABBITMQ_PORT}:${RABBITMQ_PORT}"
      - "${RABBITMQ_MANAGEMENT_PORT}:${RABBITMQ_MANAGEMENT_PORT}"
